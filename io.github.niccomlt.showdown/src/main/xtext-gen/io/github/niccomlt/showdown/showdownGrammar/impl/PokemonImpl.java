/**
 * generated by Xtext 2.21.0
 */
package io.github.niccomlt.showdown.showdownGrammar.impl;

import io.github.niccomlt.showdown.showdownGrammar.Pokemon;
import io.github.niccomlt.showdown.showdownGrammar.ShowdownGrammarPackage;
import io.github.niccomlt.showdown.showdownGrammar.Stat;

import java.util.Collection;

import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.common.util.EList;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;
import org.eclipse.emf.ecore.impl.MinimalEObjectImpl;

import org.eclipse.emf.ecore.util.EDataTypeEList;
import org.eclipse.emf.ecore.util.EObjectContainmentEList;
import org.eclipse.emf.ecore.util.InternalEList;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Pokemon</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link io.github.niccomlt.showdown.showdownGrammar.impl.PokemonImpl#getNick <em>Nick</em>}</li>
 *   <li>{@link io.github.niccomlt.showdown.showdownGrammar.impl.PokemonImpl#getSpecie <em>Specie</em>}</li>
 *   <li>{@link io.github.niccomlt.showdown.showdownGrammar.impl.PokemonImpl#getItem <em>Item</em>}</li>
 *   <li>{@link io.github.niccomlt.showdown.showdownGrammar.impl.PokemonImpl#getAbility <em>Ability</em>}</li>
 *   <li>{@link io.github.niccomlt.showdown.showdownGrammar.impl.PokemonImpl#getLevel <em>Level</em>}</li>
 *   <li>{@link io.github.niccomlt.showdown.showdownGrammar.impl.PokemonImpl#getShiny <em>Shiny</em>}</li>
 *   <li>{@link io.github.niccomlt.showdown.showdownGrammar.impl.PokemonImpl#getHappiness <em>Happiness</em>}</li>
 *   <li>{@link io.github.niccomlt.showdown.showdownGrammar.impl.PokemonImpl#getEvs <em>Evs</em>}</li>
 *   <li>{@link io.github.niccomlt.showdown.showdownGrammar.impl.PokemonImpl#getNature <em>Nature</em>}</li>
 *   <li>{@link io.github.niccomlt.showdown.showdownGrammar.impl.PokemonImpl#getIvs <em>Ivs</em>}</li>
 *   <li>{@link io.github.niccomlt.showdown.showdownGrammar.impl.PokemonImpl#getMoves <em>Moves</em>}</li>
 * </ul>
 *
 * @generated
 */
public class PokemonImpl extends MinimalEObjectImpl.Container implements Pokemon
{
  /**
   * The default value of the '{@link #getNick() <em>Nick</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getNick()
   * @generated
   * @ordered
   */
  protected static final String NICK_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getNick() <em>Nick</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getNick()
   * @generated
   * @ordered
   */
  protected String nick = NICK_EDEFAULT;

  /**
   * The default value of the '{@link #getSpecie() <em>Specie</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getSpecie()
   * @generated
   * @ordered
   */
  protected static final String SPECIE_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getSpecie() <em>Specie</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getSpecie()
   * @generated
   * @ordered
   */
  protected String specie = SPECIE_EDEFAULT;

  /**
   * The default value of the '{@link #getItem() <em>Item</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getItem()
   * @generated
   * @ordered
   */
  protected static final String ITEM_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getItem() <em>Item</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getItem()
   * @generated
   * @ordered
   */
  protected String item = ITEM_EDEFAULT;

  /**
   * The default value of the '{@link #getAbility() <em>Ability</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getAbility()
   * @generated
   * @ordered
   */
  protected static final String ABILITY_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getAbility() <em>Ability</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getAbility()
   * @generated
   * @ordered
   */
  protected String ability = ABILITY_EDEFAULT;

  /**
   * The default value of the '{@link #getLevel() <em>Level</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getLevel()
   * @generated
   * @ordered
   */
  protected static final int LEVEL_EDEFAULT = 0;

  /**
   * The cached value of the '{@link #getLevel() <em>Level</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getLevel()
   * @generated
   * @ordered
   */
  protected int level = LEVEL_EDEFAULT;

  /**
   * The default value of the '{@link #getShiny() <em>Shiny</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getShiny()
   * @generated
   * @ordered
   */
  protected static final String SHINY_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getShiny() <em>Shiny</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getShiny()
   * @generated
   * @ordered
   */
  protected String shiny = SHINY_EDEFAULT;

  /**
   * The default value of the '{@link #getHappiness() <em>Happiness</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getHappiness()
   * @generated
   * @ordered
   */
  protected static final int HAPPINESS_EDEFAULT = 0;

  /**
   * The cached value of the '{@link #getHappiness() <em>Happiness</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getHappiness()
   * @generated
   * @ordered
   */
  protected int happiness = HAPPINESS_EDEFAULT;

  /**
   * The cached value of the '{@link #getEvs() <em>Evs</em>}' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getEvs()
   * @generated
   * @ordered
   */
  protected EList<Stat> evs;

  /**
   * The default value of the '{@link #getNature() <em>Nature</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getNature()
   * @generated
   * @ordered
   */
  protected static final String NATURE_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getNature() <em>Nature</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getNature()
   * @generated
   * @ordered
   */
  protected String nature = NATURE_EDEFAULT;

  /**
   * The cached value of the '{@link #getIvs() <em>Ivs</em>}' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getIvs()
   * @generated
   * @ordered
   */
  protected EList<Stat> ivs;

  /**
   * The cached value of the '{@link #getMoves() <em>Moves</em>}' attribute list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getMoves()
   * @generated
   * @ordered
   */
  protected EList<String> moves;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected PokemonImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return ShowdownGrammarPackage.Literals.POKEMON;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getNick()
  {
    return nick;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setNick(String newNick)
  {
    String oldNick = nick;
    nick = newNick;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, ShowdownGrammarPackage.POKEMON__NICK, oldNick, nick));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getSpecie()
  {
    return specie;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setSpecie(String newSpecie)
  {
    String oldSpecie = specie;
    specie = newSpecie;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, ShowdownGrammarPackage.POKEMON__SPECIE, oldSpecie, specie));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getItem()
  {
    return item;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setItem(String newItem)
  {
    String oldItem = item;
    item = newItem;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, ShowdownGrammarPackage.POKEMON__ITEM, oldItem, item));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getAbility()
  {
    return ability;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setAbility(String newAbility)
  {
    String oldAbility = ability;
    ability = newAbility;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, ShowdownGrammarPackage.POKEMON__ABILITY, oldAbility, ability));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public int getLevel()
  {
    return level;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setLevel(int newLevel)
  {
    int oldLevel = level;
    level = newLevel;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, ShowdownGrammarPackage.POKEMON__LEVEL, oldLevel, level));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getShiny()
  {
    return shiny;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setShiny(String newShiny)
  {
    String oldShiny = shiny;
    shiny = newShiny;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, ShowdownGrammarPackage.POKEMON__SHINY, oldShiny, shiny));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public int getHappiness()
  {
    return happiness;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setHappiness(int newHappiness)
  {
    int oldHappiness = happiness;
    happiness = newHappiness;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, ShowdownGrammarPackage.POKEMON__HAPPINESS, oldHappiness, happiness));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EList<Stat> getEvs()
  {
    if (evs == null)
    {
      evs = new EObjectContainmentEList<Stat>(Stat.class, this, ShowdownGrammarPackage.POKEMON__EVS);
    }
    return evs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getNature()
  {
    return nature;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setNature(String newNature)
  {
    String oldNature = nature;
    nature = newNature;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, ShowdownGrammarPackage.POKEMON__NATURE, oldNature, nature));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EList<Stat> getIvs()
  {
    if (ivs == null)
    {
      ivs = new EObjectContainmentEList<Stat>(Stat.class, this, ShowdownGrammarPackage.POKEMON__IVS);
    }
    return ivs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EList<String> getMoves()
  {
    if (moves == null)
    {
      moves = new EDataTypeEList<String>(String.class, this, ShowdownGrammarPackage.POKEMON__MOVES);
    }
    return moves;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
    switch (featureID)
    {
      case ShowdownGrammarPackage.POKEMON__EVS:
        return ((InternalEList<?>)getEvs()).basicRemove(otherEnd, msgs);
      case ShowdownGrammarPackage.POKEMON__IVS:
        return ((InternalEList<?>)getIvs()).basicRemove(otherEnd, msgs);
    }
    return super.eInverseRemove(otherEnd, featureID, msgs);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case ShowdownGrammarPackage.POKEMON__NICK:
        return getNick();
      case ShowdownGrammarPackage.POKEMON__SPECIE:
        return getSpecie();
      case ShowdownGrammarPackage.POKEMON__ITEM:
        return getItem();
      case ShowdownGrammarPackage.POKEMON__ABILITY:
        return getAbility();
      case ShowdownGrammarPackage.POKEMON__LEVEL:
        return getLevel();
      case ShowdownGrammarPackage.POKEMON__SHINY:
        return getShiny();
      case ShowdownGrammarPackage.POKEMON__HAPPINESS:
        return getHappiness();
      case ShowdownGrammarPackage.POKEMON__EVS:
        return getEvs();
      case ShowdownGrammarPackage.POKEMON__NATURE:
        return getNature();
      case ShowdownGrammarPackage.POKEMON__IVS:
        return getIvs();
      case ShowdownGrammarPackage.POKEMON__MOVES:
        return getMoves();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @SuppressWarnings("unchecked")
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case ShowdownGrammarPackage.POKEMON__NICK:
        setNick((String)newValue);
        return;
      case ShowdownGrammarPackage.POKEMON__SPECIE:
        setSpecie((String)newValue);
        return;
      case ShowdownGrammarPackage.POKEMON__ITEM:
        setItem((String)newValue);
        return;
      case ShowdownGrammarPackage.POKEMON__ABILITY:
        setAbility((String)newValue);
        return;
      case ShowdownGrammarPackage.POKEMON__LEVEL:
        setLevel((Integer)newValue);
        return;
      case ShowdownGrammarPackage.POKEMON__SHINY:
        setShiny((String)newValue);
        return;
      case ShowdownGrammarPackage.POKEMON__HAPPINESS:
        setHappiness((Integer)newValue);
        return;
      case ShowdownGrammarPackage.POKEMON__EVS:
        getEvs().clear();
        getEvs().addAll((Collection<? extends Stat>)newValue);
        return;
      case ShowdownGrammarPackage.POKEMON__NATURE:
        setNature((String)newValue);
        return;
      case ShowdownGrammarPackage.POKEMON__IVS:
        getIvs().clear();
        getIvs().addAll((Collection<? extends Stat>)newValue);
        return;
      case ShowdownGrammarPackage.POKEMON__MOVES:
        getMoves().clear();
        getMoves().addAll((Collection<? extends String>)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case ShowdownGrammarPackage.POKEMON__NICK:
        setNick(NICK_EDEFAULT);
        return;
      case ShowdownGrammarPackage.POKEMON__SPECIE:
        setSpecie(SPECIE_EDEFAULT);
        return;
      case ShowdownGrammarPackage.POKEMON__ITEM:
        setItem(ITEM_EDEFAULT);
        return;
      case ShowdownGrammarPackage.POKEMON__ABILITY:
        setAbility(ABILITY_EDEFAULT);
        return;
      case ShowdownGrammarPackage.POKEMON__LEVEL:
        setLevel(LEVEL_EDEFAULT);
        return;
      case ShowdownGrammarPackage.POKEMON__SHINY:
        setShiny(SHINY_EDEFAULT);
        return;
      case ShowdownGrammarPackage.POKEMON__HAPPINESS:
        setHappiness(HAPPINESS_EDEFAULT);
        return;
      case ShowdownGrammarPackage.POKEMON__EVS:
        getEvs().clear();
        return;
      case ShowdownGrammarPackage.POKEMON__NATURE:
        setNature(NATURE_EDEFAULT);
        return;
      case ShowdownGrammarPackage.POKEMON__IVS:
        getIvs().clear();
        return;
      case ShowdownGrammarPackage.POKEMON__MOVES:
        getMoves().clear();
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case ShowdownGrammarPackage.POKEMON__NICK:
        return NICK_EDEFAULT == null ? nick != null : !NICK_EDEFAULT.equals(nick);
      case ShowdownGrammarPackage.POKEMON__SPECIE:
        return SPECIE_EDEFAULT == null ? specie != null : !SPECIE_EDEFAULT.equals(specie);
      case ShowdownGrammarPackage.POKEMON__ITEM:
        return ITEM_EDEFAULT == null ? item != null : !ITEM_EDEFAULT.equals(item);
      case ShowdownGrammarPackage.POKEMON__ABILITY:
        return ABILITY_EDEFAULT == null ? ability != null : !ABILITY_EDEFAULT.equals(ability);
      case ShowdownGrammarPackage.POKEMON__LEVEL:
        return level != LEVEL_EDEFAULT;
      case ShowdownGrammarPackage.POKEMON__SHINY:
        return SHINY_EDEFAULT == null ? shiny != null : !SHINY_EDEFAULT.equals(shiny);
      case ShowdownGrammarPackage.POKEMON__HAPPINESS:
        return happiness != HAPPINESS_EDEFAULT;
      case ShowdownGrammarPackage.POKEMON__EVS:
        return evs != null && !evs.isEmpty();
      case ShowdownGrammarPackage.POKEMON__NATURE:
        return NATURE_EDEFAULT == null ? nature != null : !NATURE_EDEFAULT.equals(nature);
      case ShowdownGrammarPackage.POKEMON__IVS:
        return ivs != null && !ivs.isEmpty();
      case ShowdownGrammarPackage.POKEMON__MOVES:
        return moves != null && !moves.isEmpty();
    }
    return super.eIsSet(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String toString()
  {
    if (eIsProxy()) return super.toString();

    StringBuilder result = new StringBuilder(super.toString());
    result.append(" (nick: ");
    result.append(nick);
    result.append(", specie: ");
    result.append(specie);
    result.append(", item: ");
    result.append(item);
    result.append(", ability: ");
    result.append(ability);
    result.append(", level: ");
    result.append(level);
    result.append(", shiny: ");
    result.append(shiny);
    result.append(", happiness: ");
    result.append(happiness);
    result.append(", nature: ");
    result.append(nature);
    result.append(", moves: ");
    result.append(moves);
    result.append(')');
    return result.toString();
  }

} //PokemonImpl
