/**
 * generated by Xtext 2.21.0
 */
package io.github.niccomlt.showdown.showdownGrammar.impl;

import io.github.niccomlt.showdown.showdownGrammar.*;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.emf.ecore.EPackage;

import org.eclipse.emf.ecore.impl.EFactoryImpl;

import org.eclipse.emf.ecore.plugin.EcorePlugin;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model <b>Factory</b>.
 * <!-- end-user-doc -->
 * @generated
 */
public class ShowdownGrammarFactoryImpl extends EFactoryImpl implements ShowdownGrammarFactory
{
  /**
   * Creates the default factory implementation.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static ShowdownGrammarFactory init()
  {
    try
    {
      ShowdownGrammarFactory theShowdownGrammarFactory = (ShowdownGrammarFactory)EPackage.Registry.INSTANCE.getEFactory(ShowdownGrammarPackage.eNS_URI);
      if (theShowdownGrammarFactory != null)
      {
        return theShowdownGrammarFactory;
      }
    }
    catch (Exception exception)
    {
      EcorePlugin.INSTANCE.log(exception);
    }
    return new ShowdownGrammarFactoryImpl();
  }

  /**
   * Creates an instance of the factory.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public ShowdownGrammarFactoryImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EObject create(EClass eClass)
  {
    switch (eClass.getClassifierID())
    {
      case ShowdownGrammarPackage.TEAM: return createTeam();
      case ShowdownGrammarPackage.POKEMON: return createPokemon();
      case ShowdownGrammarPackage.STAT: return createStat();
      default:
        throw new IllegalArgumentException("The class '" + eClass.getName() + "' is not a valid classifier");
    }
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Team createTeam()
  {
    TeamImpl team = new TeamImpl();
    return team;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Pokemon createPokemon()
  {
    PokemonImpl pokemon = new PokemonImpl();
    return pokemon;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Stat createStat()
  {
    StatImpl stat = new StatImpl();
    return stat;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public ShowdownGrammarPackage getShowdownGrammarPackage()
  {
    return (ShowdownGrammarPackage)getEPackage();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @deprecated
   * @generated
   */
  @Deprecated
  public static ShowdownGrammarPackage getPackage()
  {
    return ShowdownGrammarPackage.eINSTANCE;
  }

} //ShowdownGrammarFactoryImpl
